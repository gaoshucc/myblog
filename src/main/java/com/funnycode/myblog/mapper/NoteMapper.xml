<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.funnycode.myblog.mapper.NoteMapper">

    <select id="findNoteTypeByTypeId" parameterType="java.lang.String" resultType="com.funnycode.myblog.pojo.PO.NoteType">
        SELECT * FROM `note_type` WHERE type_id = #{typeId}
    </select>

    <select id="findNoteCate" resultType="com.funnycode.myblog.pojo.PO.NoteType">
        SELECT * FROM `note_type` ORDER BY type_id
    </select>

    <resultMap id="AllNotes" type="com.funnycode.myblog.pojo.PO.Note">
        <id property="noteId" column="note_id"></id>
        <result property="noteTitle" column="note_title"></result>
        <result property="createTime" column="create_time"></result>
        <association property="blogger" column="blogger" javaType="com.funnycode.myblog.pojo.PO.User" select="com.funnycode.myblog.mapper.UserMapper.findBloggerByUserId"></association>
        <association property="noteType" column="note_type" javaType="com.funnycode.myblog.pojo.PO.NoteType" select="com.funnycode.myblog.mapper.NoteMapper.findNoteTypeByTypeId"></association>
        <association property="commentCount" column="note_id" javaType="java.lang.String" select="com.funnycode.myblog.mapper.NoteMapper.findCommentCountByNoteId"></association>
    </resultMap>
    <select id="findAllNotes" parameterType="java.lang.String" resultMap="AllNotes">
        SELECT note_id,note_title,blogger,note_type,create_time
        FROM `note`
        WHERE status = 1
        ORDER BY create_time DESC
    </select>

    <select id="findNotesNoteTypeId" parameterType="java.lang.Integer" resultMap="AllNotes">
        SELECT note_id,note_title,blogger,note_type,create_time
        FROM `note`
        WHERE status = 1 AND note_type = #{noteTypeId}
        ORDER BY create_time DESC
    </select>

    <resultMap id="AllNotesLimit" type="com.funnycode.myblog.pojo.PO.Note">
        <id property="noteId" column="note_id"></id>
        <result property="noteTitle" column="note_title"></result>
        <result property="createTime" column="create_time"></result>
        <association property="blogger" column="blogger" javaType="com.funnycode.myblog.pojo.PO.User" select="com.funnycode.myblog.mapper.UserMapper.findBloggerByUserId"></association>
        <association property="noteType" column="note_type" javaType="com.funnycode.myblog.pojo.PO.NoteType" select="com.funnycode.myblog.mapper.NoteMapper.findNoteTypeByTypeId"></association>
        <association property="commentCount" column="note_id" javaType="java.lang.String" select="com.funnycode.myblog.mapper.NoteMapper.findCommentCountByNoteId"></association>
    </resultMap>
    <select id="findAllNotesLimit" resultMap="AllNotesLimit">
        SELECT note_id,note_title,blogger,note_type,create_time
        FROM `note`
        WHERE status = 1
        ORDER BY create_time DESC
        LIMIT #{param1},#{param2}
    </select>

    <select id="findNoteCountByAuthorId" resultType="java.lang.Integer">
        SELECT count(*) FROM `note`
        WHERE blogger = #{authorId}
    </select>

    <resultMap id="Notes" type="com.funnycode.myblog.pojo.PO.Note">
        <id property="noteId" column="note_id"></id>
        <result property="noteTitle" column="note_title"></result>
        <result property="createTime" column="create_time"></result>
        <association property="noteType" column="note_type" javaType="com.funnycode.myblog.pojo.PO.NoteType" select="com.funnycode.myblog.mapper.NoteMapper.findNoteTypeByTypeId"></association>
        <association property="commentCount" column="note_id" javaType="java.lang.String" select="com.funnycode.myblog.mapper.NoteMapper.findCommentCountByNoteId"></association>
    </resultMap>

    <select id="findNotesByUserId" parameterType="java.lang.String" resultMap="Notes">
        SELECT note_id,note_title,note_type,create_time FROM `note` WHERE blogger = #{userId} AND status = 1 ORDER BY create_time DESC
    </select>

    <select id="findNoteRecycleBinByUserId" parameterType="java.lang.String" resultMap="Notes">
        SELECT note_id,note_title,note_type,create_time FROM `note` WHERE blogger = #{userId} AND status = 0 ORDER BY create_time DESC
    </select>

    <resultMap id="NoteDetail" type="com.funnycode.myblog.pojo.PO.Note">
        <id property="noteId" column="note_id"></id>
        <result property="noteTitle" column="note_title"></result>
        <result property="createTime" column="create_time"></result>
        <association property="blogger" column="blogger" javaType="com.funnycode.myblog.pojo.PO.User" select="com.funnycode.myblog.mapper.UserMapper.findBloggerDetailByUserId"></association>
        <association property="noteType" column="note_type" javaType="com.funnycode.myblog.pojo.PO.NoteType" select="com.funnycode.myblog.mapper.NoteMapper.findNoteTypeByTypeId"></association>
    </resultMap>
    <select id="findNoteByNoteId" parameterType="java.lang.String" resultMap="NoteDetail">
        SELECT note_id,note_title,blogger,note_type,create_time
        FROM `note`
        WHERE note_id = #{noteId} AND status = 1
    </select>

    <resultMap id="FavoritesNoteDetail" type="com.funnycode.myblog.pojo.PO.Note">
        <id property="noteId" column="note_id"></id>
        <result property="noteTitle" column="note_title"></result>
        <result property="createTime" column="create_time"></result>
        <association property="blogger" column="blogger" javaType="com.funnycode.myblog.pojo.PO.User" select="com.funnycode.myblog.mapper.UserMapper.findAuthorDetailByUserId"></association>
        <association property="noteType" column="note_type" javaType="com.funnycode.myblog.pojo.PO.NoteType" select="com.funnycode.myblog.mapper.NoteMapper.findNoteTypeByTypeId"></association>
        <association property="commentCount" column="note_id" javaType="java.lang.String" select="com.funnycode.myblog.mapper.NoteMapper.findCommentCountByNoteId"></association>
    </resultMap>
    <select id="findFavoritesDetailByNoteId" parameterType="java.lang.String" resultMap="FavoritesNoteDetail">
        SELECT note_id,note_title,blogger,note_type,create_time
        FROM `note`
        WHERE note_id = #{noteId} AND status = 1
    </select>

    <select id="findNoteHtmlByNoteId" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT note_html FROM `note` WHERE note_id = #{noteId} AND status = 1
    </select>

    <select id="findLikeCountByNoteId" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM `like_note`
        WHERE note_id = #{noteId}
    </select>

    <update id="deleteNoteByNoteId" parameterType="java.lang.String">
        UPDATE `note` SET status = 0 WHERE note_id = #{noteId}
    </update>

    <update id="recycleNoteByNoteId" parameterType="java.lang.String">
        UPDATE `note` SET status = 1 WHERE note_id = #{noteId}
    </update>

    <delete id="completelyDelNoteByNoteId" parameterType="java.lang.String">
        DELETE FROM `note` WHERE note_id = #{noteId} AND status = 0
    </delete>

    <insert id="saveComment" parameterType="com.funnycode.myblog.pojo.PO.Comment">
        INSERT INTO `note_comment`(`comment_id`,`note_id`,`user_id`,`parent_id`,`comment_content`,`comment_time`)
        VALUES (#{commentId},#{note.noteId},#{user.userId},#{parentId},#{commentContent},#{commentTime})
    </insert>
    <!--查找评论-->
    <resultMap id="commentVO" type="com.funnycode.myblog.pojo.VO.CommentVO">
        <id property="commentId" column="comment_id"></id>
        <result property="commentContent" column="comment_content"></result>
        <result property="commentTime" column="comment_time"></result>
        <association property="user" column="user_id" javaType="com.funnycode.myblog.pojo.VO.UserVO" select="com.funnycode.myblog.mapper.UserMapper.findObserver"></association>
        <collection property="son" column="{noteId=note_id,commentId=comment_id}" javaType="java.util.List" ofType="com.funnycode.myblog.pojo.VO.CommentVO" select="com.funnycode.myblog.mapper.NoteMapper.findChildComments"></collection>
    </resultMap>
    <select id="findCommentsByNoteId" parameterType="java.lang.String" resultMap="commentVO">
        SELECT * FROM `note_comment` WHERE note_id = #{noteId} AND parent_id = "0" ORDER BY comment_time DESC
    </select>
    <!--查找子评论-->
    <resultMap id="child" type="com.funnycode.myblog.pojo.VO.CommentVO">
        <id property="commentId" column="comment_id"></id>
        <result property="commentContent" column="comment_content"></result>
        <result property="commentTime" column="comment_time"></result>
        <association property="user" column="user_id" javaType="com.funnycode.myblog.pojo.VO.UserVO" select="com.funnycode.myblog.mapper.UserMapper.findObserver"></association>
        <collection property="son" column="{noteId=note_id,commentId=comment_id}" javaType="java.util.List" ofType="com.funnycode.myblog.pojo.VO.CommentVO" select="com.funnycode.myblog.mapper.NoteMapper.findChildComments"></collection>
    </resultMap>
    <select id="findChildComments" resultMap="child">
        SELECT * FROM `note_comment` WHERE note_id = #{noteId} AND parent_id = #{commentId} ORDER BY comment_time DESC
    </select>

    <select id="findNoteTitleByNoteId" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT note_title
        FROM `note`
        WHERE note_id = #{note_id}
    </select>

    <select id="findAuthorNicknameByNoteId" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT u.nickname
        FROM `note` n, `user` u
        WHERE n.note_id = #{note_id} AND n.blogger = u.user_id
    </select>

    <select id="findCommentCountByNoteId" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM `note_comment`
        WHERE note_id = #{note_id}
    </select>
</mapper>