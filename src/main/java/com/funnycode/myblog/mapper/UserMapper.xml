<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.funnycode.myblog.mapper.UserMapper">

    <select id="userexists" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM `user` WHERE username = #{username}
    </select>

    <select id="nicknameexists" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM `user` WHERE nickname = #{username}
    </select>

    <insert id="regist" parameterType="com.funnycode.myblog.pojo.PO.User">
        INSERT INTO
        `user`(`user_id`,`status`,`last_logintime`,`username`,`password`,`nickname`,`role`,`profile_path`,`experience`,`gender`,`motto`,`position_id`,`regtime`)
        VALUES
        (#{userId},#{status},#{lastLogintime},#{username},#{password},#{nickname},#{role},#{profilePath},#{experience},#{gender},#{motto},#{position.positionId},#{regtime})
    </insert>

    <select id="login" parameterType="com.funnycode.myblog.pojo.PO.User" resultType="com.funnycode.myblog.pojo.PO.User">
        SELECT * FROM `user` WHERE username = #{username} and password = #{password}
    </select>

    <resultMap id="UserInfo" type="com.funnycode.myblog.pojo.PO.User">
        <id property="userId" column="user_id"></id>
        <association property="position" column="position_id" javaType="com.funnycode.myblog.pojo.PO.Position"
                     select="com.funnycode.myblog.mapper.UserMapper.findPositionByPositionId"></association>
    </resultMap>
    <select id="getUserByUserId" parameterType="java.lang.String" resultMap="UserInfo">
        SELECT * FROM `user` WHERE user_id = #{userId}
    </select>

    <resultMap id="author" type="com.funnycode.myblog.pojo.PO.User">
        <id property="userId" column="user_id"></id>
        <result property="nickname" column="nickname"></result>
        <result property="profilePath" column="profile_path"></result>
        <association property="position" column="position_id" javaType="com.funnycode.myblog.pojo.PO.Position"
                     select="com.funnycode.myblog.mapper.UserMapper.findPositionByPositionId"></association>
    </resultMap>
    <select id="findAuthorByAuthorId" parameterType="java.lang.String" resultMap="author">
        SELECT user_id,nickname,profile_path,position_id FROM `user` WHERE user_id = #{authorId}
    </select>

    <resultMap id="EditableUserInfo" type="com.funnycode.myblog.pojo.PO.User">
        <id property="userId" column="user_id"></id>
        <result property="nickname" column="nickname"></result>
        <result property="profilePath" column="profile_path"></result>
        <result property="gender" column="gender"></result>
        <result property="motto" column="motto"></result>
        <association property="position" column="position_id" javaType="com.funnycode.myblog.pojo.PO.Position"
                     select="com.funnycode.myblog.mapper.UserMapper.findPositionByPositionId"></association>
    </resultMap>
    <select id="findEditableUserInfo" parameterType="java.lang.String" resultMap="EditableUserInfo">
        SELECT user_id,nickname,profile_path,gender,motto,position_id FROM `user` WHERE user_id = #{userId}
    </select>

    <select id="getUserByUsername" parameterType="java.lang.String" resultType="com.funnycode.myblog.pojo.PO.User">
        SELECT * FROM `user` WHERE username = #{username}
    </select>

    <select id="getPasswordByUsername" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT password FROM `user` WHERE username = #{username}
    </select>

    <select id="getRoleByUsername" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT role FROM `user` WHERE username = #{username}
    </select>

    <resultMap id="Blogger" type="com.funnycode.myblog.pojo.PO.User">
        <id property="userId" column="user_id"></id>
        <result property="nickname" column="nickname"></result>
    </resultMap>
    <select id="findBloggerByUserId" parameterType="java.lang.String" resultMap="Blogger">
        SELECT user_id,nickname FROM `user` WHERE user_id = #{userId}
    </select>

    <resultMap id="Quizzer" type="com.funnycode.myblog.pojo.PO.User">
        <id property="userId" column="user_id"></id>
        <result property="nickname" column="nickname"></result>
    </resultMap>
    <select id="findQuizzerByUserId" parameterType="java.lang.String" resultMap="Quizzer">
        SELECT user_id,nickname FROM `user` WHERE user_id = #{userId}
    </select>

    <select id="findPositionByPositionId" resultType="com.funnycode.myblog.pojo.PO.Position">
        SELECT * FROM `position` WHERE position_id = #{position_id}
    </select>

    <select id="findAllPosition" resultType="com.funnycode.myblog.pojo.PO.Position">
        SELECT * FROM `position`
    </select>

    <!--根据userId获得博主信息-->
    <resultMap id="BloggerDetail" type="com.funnycode.myblog.pojo.PO.User">
        <id property="userId" column="user_id"></id>
        <result property="nickname" column="nickname"></result>
        <result property="profilePath" column="profile_path"></result>
        <result property="gender" column="gender"></result>
        <result property="experience" column="experience"></result>
        <association property="position" column="position_id" javaType="com.funnycode.myblog.pojo.PO.Position"
                     select="com.funnycode.myblog.mapper.UserMapper.findPositionByPositionId"></association>
    </resultMap>
    <select id="findBloggerDetailByUserId" parameterType="java.lang.String" resultMap="BloggerDetail">
        SELECT user_id,nickname,profile_path,gender,experience,position_id FROM `user` WHERE user_id = #{userId}
    </select>
    <!--收藏夹显示的作者信息-->
    <resultMap id="AuthorDetail" type="com.funnycode.myblog.pojo.PO.User">
        <id property="userId" column="user_id"></id>
        <result property="nickname" column="nickname"></result>
        <result property="profilePath" column="profile_path"></result>
        <association property="position" column="position_id" javaType="com.funnycode.myblog.pojo.PO.Position"
                     select="com.funnycode.myblog.mapper.UserMapper.findPositionByPositionId"></association>
    </resultMap>
    <select id="findAuthorDetailByUserId" parameterType="java.lang.String" resultMap="AuthorDetail">
        SELECT user_id,nickname,profile_path,position_id
        FROM `user`
        WHERE user_id = #{userId}
    </select>
    <!--根据userId获得提问者信息-->
    <resultMap id="QuizzerDetail" type="com.funnycode.myblog.pojo.PO.User">
        <id property="userId" column="user_id"></id>
        <result property="nickname" column="nickname"></result>
        <result property="profilePath" column="profile_path"></result>
        <result property="gender" column="gender"></result>
        <result property="experience" column="experience"></result>
        <association property="position" column="position_id" javaType="com.funnycode.myblog.pojo.PO.Position"
                     select="com.funnycode.myblog.mapper.UserMapper.findPositionByPositionId"></association>
    </resultMap>
    <select id="findQuizzerDetailByUserId" parameterType="java.lang.String" resultMap="QuizzerDetail">
        SELECT user_id,nickname,profile_path,gender,experience,position_id
        FROM `user`
        WHERE user_id = #{userId}
    </select>

    <update id="updateUserLastLogintimeByUsername" parameterType="com.funnycode.myblog.pojo.PO.User">
        UPDATE `user`
        <trim prefix="set" suffixOverrides=",">
            <if test="lastLogintime != null">last_logintime = #{lastLogintime},</if>
        </trim>
        WHERE username = #{username}
    </update>

    <insert id="saveNote" parameterType="com.funnycode.myblog.pojo.PO.Note">
        INSERT INTO `note`(`note_id`,`note_title`,`note_type`,`create_time`,`status`,`blogger`,`note_html`)
        VALUES (#{noteId},#{noteTitle},#{noteType.typeId},#{createTime},#{status},#{blogger.userId},#{noteHtml})
    </insert>

    <insert id="likeNote">
        INSERT INTO `like_note`(`user_id`,`note_id`)
        VALUES (#{param1},#{param2})
    </insert>

    <delete id="cancelLikeNote">
        DELETE FROM `like_note`
        WHERE user_id = #{param1} AND note_id = #{param2}
    </delete>

    <select id="hasLike" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM `like_note`
        WHERE user_id = #{param1} AND note_id = #{param2}
    </select>

    <insert id="collectNote">
        INSERT INTO `favorite_note`(`user_id`,`note_id`,`collect_time`)
        VALUES (#{param1},#{param2},#{param3})
    </insert>

    <delete id="cancelCollectNote">
        DELETE FROM `favorite_note`
        WHERE user_id = #{param1} AND note_id = #{param2}
    </delete>

    <select id="hasCollect" resultType="java.lang.Integer">
        SELECT COUNT(*) FROM `favorite_note`
        WHERE user_id = #{param1} AND note_id = #{param2}
    </select>

    <resultMap id="Favorite" type="com.funnycode.myblog.pojo.VO.FavoriteVO">
        <id property="articleId" column="note_id"></id>
        <association property="articleTitle" column="note_id" javaType="java.lang.String"
                     select="com.funnycode.myblog.mapper.NoteMapper.findNoteTitleByNoteId"></association>
        <association property="authorNickname" column="note_id" javaType="java.lang.String"
                     select="com.funnycode.myblog.mapper.NoteMapper.findAuthorNicknameByNoteId"></association>
    </resultMap>
    <select id="findFavoritesLimitByUserId" resultMap="Favorite">
        SELECT note_id
        FROM `favorite_note`
        WHERE user_id = #{param1}
        ORDER BY collect_time DESC
        LIMIT #{param2},#{param3}
    </select>

    <resultMap id="FavoriteDetail" type="com.funnycode.myblog.pojo.VO.FavoritesDetailVO">
        <result property="collectTime" column="collect_time"></result>
        <association property="collectNote" column="note_id" javaType="com.funnycode.myblog.pojo.PO.Note"
                     select="com.funnycode.myblog.mapper.NoteMapper.findFavoritesDetailByNoteId"></association>
    </resultMap>
    <select id="findFavoritesByUserId" resultMap="FavoriteDetail">
        SELECT note_id,collect_time
        FROM `favorite_note`
        WHERE user_id = #{param1}
        ORDER BY collect_time DESC
    </select>

    <select id="findMyFavoritesCount" parameterType="java.lang.String" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM `favorite_note`
        WHERE user_id = #{loginUserId}
    </select>

    <update id="updateUserExperienceByUserId" parameterType="java.lang.String">
        UPDATE `user` SET experience = experience+100 WHERE user_id = #{userId}
    </update>

    <resultMap id="userVO" type="com.funnycode.myblog.pojo.VO.UserVO">
        <id property="userId" column="user_id"></id>
        <result property="nickname" column="nickname"></result>
        <result property="profilePath" column="profile_path"></result>
    </resultMap>
    <select id="findObserver" parameterType="java.lang.String" resultMap="userVO">
        SELECT user_id,nickname,profile_path FROM `user` WHERE user_id = #{userId}
    </select>

    <update id="updateUserInfo" parameterType="com.funnycode.myblog.pojo.PO.User">
        UPDATE `user`
        <trim prefix="set" suffixOverrides=",">
            <if test="profilePath != null">profile_path = #{profilePath},</if>
            <if test="nickname != null">nickname = #{nickname},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="position.positionId != null">position_id = #{position.positionId},</if>
            <if test="motto != null">motto = #{motto},</if>
        </trim>
        WHERE user_id = #{userId}
    </update>

    <select id="findAttentionStatusById" resultType="java.lang.Integer">
        SELECT status
        FROM `followee`
        WHERE `user_id`=#{param1} AND `followee_id`=#{param2}
    </select>

    <insert id="addFolloweeById">
        INSERT INTO `followee`(`user_id`,`followee_id`,`status`)
        VALUES (#{param1},#{param2},0)
    </insert>

    <update id="updateAttentionStatusById">
        UPDATE `followee`
        SET status = #{param3}
        WHERE `user_id`=#{param1} AND `followee_id`=#{param2}
    </update>

    <resultMap id="Followee" type="com.funnycode.myblog.pojo.VO.FolloweeVO">
        <id property="userId" column="user_id"></id>
        <result property="nickname" column="nickname"></result>
    </resultMap>
    <select id="findFolloweeList" resultMap="Followee">
        SELECT user_id,nickname
        FROM `user`
        WHERE user_id IN (
        SELECT followee_id
        FROM `followee`
        WHERE `user_id`=#{param1} AND (`status`=1 OR `status`=3)
        UNION
        SELECT user_id
        FROM `followee`
        WHERE `followee_id`=#{param1} AND (`status`=2 OR `status`=3)
        )
    </select>
</mapper>